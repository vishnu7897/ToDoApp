{"ast":null,"code":"var _jsxFileName = \"D:\\\\todo-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Navbar from './components/Navbar';\nimport AddTodo from './components/AddTodo';\nimport AllTodos from './components/AllTodos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [todos, setTodos] = useState(JSON.parse(localStorage.getItem(\"todo\")) || []);\n  const InsertTodos = obj => {\n    const item = {\n      id: new Date().getTime(),\n      title: obj.title,\n      description: obj.description,\n      isComplete: false\n    };\n    setTodos([...todos, item]);\n    localStorage.setItem(\"todo\", JSON.stringify([...todos, item]));\n  };\n\n  // const AllTodos = ()=>{\n  //   return todos\n  // }\n\n  const deleteTodo = id => {\n    const newTodos = todos.filter(cur => cur.id !== id);\n    setTodos(newTodos);\n    localStorage.setItem(\"todo\", JSON.stringify(newTodos));\n  };\n  const updateTodo = id => {\n    const newTodos = todos.filter(cur => {\n      if (cur.id === id) {\n        cur.isComplete = true;\n      }\n      return cur;\n    });\n    setTodos(newTodos);\n    localStorage.setItem(\"todo\", JSON.stringify(newTodos));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(AddTodo, {\n      InsertTodos: InsertTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AllTodos, {\n      Todos: todos,\n      deleteTodo: deleteTodo,\n      updateTodo: updateTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"M0J0Zqti8mr23JbHrjMWXZRdRIo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","AddTodo","AllTodos","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","todos","setTodos","JSON","parse","localStorage","getItem","InsertTodos","obj","item","id","Date","getTime","title","description","isComplete","setItem","stringify","deleteTodo","newTodos","filter","cur","updateTodo","children","fileName","_jsxFileName","lineNumber","columnNumber","Todos","_c","$RefreshReg$"],"sources":["D:/todo-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react'\nimport Navbar from './components/Navbar'\nimport AddTodo from './components/AddTodo'\nimport AllTodos from './components/AllTodos'\n\nconst App = () => {\n\n\n  const [todos,setTodos]  = useState(JSON.parse(localStorage.getItem(\"todo\")) ||[]);\n\n\n  \n\n  const InsertTodos =(obj)=>{\n\n    const item ={\n      id:new Date().getTime(),\n      title:obj.title,\n      description:obj.description,\n      isComplete:false\n    }\n\n\n    setTodos([...todos,item])\n\n    localStorage.setItem(\"todo\",JSON.stringify([...todos,item]))\n\n  }\n\n  // const AllTodos = ()=>{\n  //   return todos\n  // }\n\n  const deleteTodo =(id)=>{\n    const newTodos = todos.filter((cur)=>cur.id!==id);\n    setTodos(newTodos)\n    localStorage.setItem(\"todo\",JSON.stringify(newTodos))\n\n  \n\n  }\n\n  const updateTodo =(id)=>{\n    const newTodos = todos.filter((cur)=>{\n      if(cur.id===id){\n        cur.isComplete = true\n      }\n      return cur;\n    });\n    setTodos(newTodos)\n    localStorage.setItem(\"todo\",JSON.stringify(newTodos))\n   \n  }\n\n\n  return (\n    <>\n       <Navbar/>\n      <AddTodo InsertTodos={InsertTodos} />\n         <AllTodos Todos ={todos}  deleteTodo={deleteTodo} updateTodo={updateTodo} />\n    </>\n  )\n}\n\nexport default App\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,QAAQ,MAAM,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAGhB,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAIX,QAAQ,CAACY,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAG,EAAE,CAAC;EAKjF,MAAMC,WAAW,GAAGC,GAAG,IAAG;IAExB,MAAMC,IAAI,GAAE;MACVC,EAAE,EAAC,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;MACvBC,KAAK,EAACL,GAAG,CAACK,KAAK;MACfC,WAAW,EAACN,GAAG,CAACM,WAAW;MAC3BC,UAAU,EAAC;IACb,CAAC;IAGDb,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAACQ,IAAI,CAAC,CAAC;IAEzBJ,YAAY,CAACW,OAAO,CAAC,MAAM,EAACb,IAAI,CAACc,SAAS,CAAC,CAAC,GAAGhB,KAAK,EAACQ,IAAI,CAAC,CAAC,CAAC;EAE9D,CAAC;;EAED;EACA;EACA;;EAEA,MAAMS,UAAU,GAAGR,EAAE,IAAG;IACtB,MAAMS,QAAQ,GAAGlB,KAAK,CAACmB,MAAM,CAAEC,GAAG,IAAGA,GAAG,CAACX,EAAE,KAAGA,EAAE,CAAC;IACjDR,QAAQ,CAACiB,QAAQ,CAAC;IAClBd,YAAY,CAACW,OAAO,CAAC,MAAM,EAACb,IAAI,CAACc,SAAS,CAACE,QAAQ,CAAC,CAAC;EAIvD,CAAC;EAED,MAAMG,UAAU,GAAGZ,EAAE,IAAG;IACtB,MAAMS,QAAQ,GAAGlB,KAAK,CAACmB,MAAM,CAAEC,GAAG,IAAG;MACnC,IAAGA,GAAG,CAACX,EAAE,KAAGA,EAAE,EAAC;QACbW,GAAG,CAACN,UAAU,GAAG,IAAI;MACvB;MACA,OAAOM,GAAG;IACZ,CAAC,CAAC;IACFnB,QAAQ,CAACiB,QAAQ,CAAC;IAClBd,YAAY,CAACW,OAAO,CAAC,MAAM,EAACb,IAAI,CAACc,SAAS,CAACE,QAAQ,CAAC,CAAC;EAEvD,CAAC;EAGD,oBACEvB,OAAA,CAAAE,SAAA;IAAAyB,QAAA,gBACG3B,OAAA,CAACJ,MAAM;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACV/B,OAAA,CAACH,OAAO;MAACc,WAAW,EAAEA;IAAY;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClC/B,OAAA,CAACF,QAAQ;MAACkC,KAAK,EAAG3B,KAAM;MAAEiB,UAAU,EAAEA,UAAW;MAACI,UAAU,EAAEA;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC/E,CAAC;AAEP,CAAC;AAAA3B,EAAA,CAzDKD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AA2DT,eAAeA,GAAG;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}